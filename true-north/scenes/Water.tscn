[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/textures/water_normal.jpg" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass;

uniform vec4 foam_color : hint_color;
uniform vec4 specular_color : hint_color;
uniform vec4 surface_water : hint_color;
uniform vec4 deep_water : hint_color;
uniform sampler2D water_normal: hint_albedo;
uniform vec2 uv_scale = vec2(1.0, 1.0);
uniform float time_factor = 0.035;
uniform float visible_depth = 32.0;
uniform float foam_range = 16.0;
uniform float wave_amp = 1.0;


varying vec3 eye_vector;

vec3 getPosition(mat4 camera) {
	return (-camera[3] * camera).xyz;
	}

void vertex(){
	vec3 vert_new = VERTEX;
	vert_new += (texture(water_normal, (UV*uv_scale)+TIME*time_factor).xyz 
					* vec3(2.0, 2.0, 1.0) - vec3(1.0, 1.0, 0.0)) 
				* wave_amp;
	VERTEX = vert_new;
	
	vec3 cam_pos = getPosition(INV_CAMERA_MATRIX).xyz;
	eye_vector = normalize(VERTEX - cam_pos);
	
}

float fresnel(float n1, float n2, float cos_theta) {
	float R0 = pow((n1 - n2) / (n1+n2), 2);
	return R0 + (1.0 - R0)*pow(1.0 - cos_theta, 5);
}

void fragment(){
	/** Handling depth issues for GLES2 Renderer **/
	vec4 depth_tex = texture(DEPTH_TEXTURE, SCREEN_UV) * 2.0 - 1.0;
	vec4 world_coord = INV_PROJECTION_MATRIX * vec4(SCREEN_UV, depth_tex.r, 1.0);
	world_coord.xyz /= world_coord.w;
	
	/** Begin actual shader code **/
	
	// Handle normal mapping
	NORMALMAP = texture(
				water_normal, (UV*uv_scale)+TIME*time_factor).xyz;
	NORMALMAP_DEPTH = 1.0;
	NORMAL = normalize(NORMAL + NORMALMAP * NORMALMAP_DEPTH);

	// Depth map based transparency	
	float alpha_component = clamp(
		smoothstep(world_coord.z, world_coord.z+visible_depth, VERTEX.z), surface_water.w, deep_water.w);
		
	// Edge transparency and foam
	float edge_percentage = clamp(
		smoothstep(world_coord.z, world_coord.z+foam_range, VERTEX.z), 0.0, 1.0);
	
	float n1 = 1.000;
	float n2 = 1.333;
	
	float theta = dot(eye_vector, NORMALMAP);
	
	float reflectiveness = fresnel(n1, n2, abs(theta));
	
	vec3 shallow2Deep = mix(surface_water.xyz, deep_water.xyz, alpha_component);
	vec3 foamAtEdge = mix(foam_color.xyz, shallow2Deep, edge_percentage);
	
	ALBEDO = mix(foamAtEdge, specular_color.xyz, reflectiveness*specular_color.w);
	
	ALPHA = alpha_component;
	
	
	/** Enable alpha clipping to handle depth texture read issues. Additionally added smoothing based on foam **/
	ALPHA *= clamp(smoothstep(world_coord.z, world_coord.z+foam_range/4.0, VERTEX.z), 0.0, 1.0);
}"

[sub_resource type="ShaderMaterial" id=2]
render_priority = -10
shader = SubResource( 1 )
shader_param/foam_color = Color( 1, 1, 1, 1 )
shader_param/specular_color = Color( 1, 1, 1, 0.266667 )
shader_param/surface_water = Color( 0.180392, 0.458824, 0.45098, 0.682353 )
shader_param/deep_water = Color( 0.0352941, 0.172549, 0.215686, 0.94902 )
shader_param/uv_scale = Vector2( 12, 4 )
shader_param/time_factor = 0.025
shader_param/visible_depth = 8.0
shader_param/foam_range = 2.0
shader_param/wave_amp = 1.0
shader_param/water_normal = ExtResource( 1 )

[sub_resource type="PlaneMesh" id=3]
size = Vector2( 256, 256 )
subdivide_width = 8
subdivide_depth = 8

[sub_resource type="ConcavePolygonShape" id=7]
data = PoolVector3Array( 128, 0, 128, 99.5556, 0, 128, 128, 0, 99.5556, 99.5556, 0, 128, 99.5556, 0, 99.5556, 128, 0, 99.5556, 99.5556, 0, 128, 71.1111, 0, 128, 99.5556, 0, 99.5556, 71.1111, 0, 128, 71.1111, 0, 99.5556, 99.5556, 0, 99.5556, 71.1111, 0, 128, 42.6667, 0, 128, 71.1111, 0, 99.5556, 42.6667, 0, 128, 42.6667, 0, 99.5556, 71.1111, 0, 99.5556, 42.6667, 0, 128, 14.2222, 0, 128, 42.6667, 0, 99.5556, 14.2222, 0, 128, 14.2222, 0, 99.5556, 42.6667, 0, 99.5556, 14.2222, 0, 128, -14.2222, 0, 128, 14.2222, 0, 99.5556, -14.2222, 0, 128, -14.2222, 0, 99.5556, 14.2222, 0, 99.5556, -14.2222, 0, 128, -42.6667, 0, 128, -14.2222, 0, 99.5556, -42.6667, 0, 128, -42.6667, 0, 99.5556, -14.2222, 0, 99.5556, -42.6667, 0, 128, -71.1111, 0, 128, -42.6667, 0, 99.5556, -71.1111, 0, 128, -71.1111, 0, 99.5556, -42.6667, 0, 99.5556, -71.1111, 0, 128, -99.5556, 0, 128, -71.1111, 0, 99.5556, -99.5556, 0, 128, -99.5556, 0, 99.5556, -71.1111, 0, 99.5556, -99.5556, 0, 128, -128, 0, 128, -99.5556, 0, 99.5556, -128, 0, 128, -128, 0, 99.5556, -99.5556, 0, 99.5556, 128, 0, 99.5556, 99.5556, 0, 99.5556, 128, 0, 71.1111, 99.5556, 0, 99.5556, 99.5556, 0, 71.1111, 128, 0, 71.1111, 99.5556, 0, 99.5556, 71.1111, 0, 99.5556, 99.5556, 0, 71.1111, 71.1111, 0, 99.5556, 71.1111, 0, 71.1111, 99.5556, 0, 71.1111, 71.1111, 0, 99.5556, 42.6667, 0, 99.5556, 71.1111, 0, 71.1111, 42.6667, 0, 99.5556, 42.6667, 0, 71.1111, 71.1111, 0, 71.1111, 42.6667, 0, 99.5556, 14.2222, 0, 99.5556, 42.6667, 0, 71.1111, 14.2222, 0, 99.5556, 14.2222, 0, 71.1111, 42.6667, 0, 71.1111, 14.2222, 0, 99.5556, -14.2222, 0, 99.5556, 14.2222, 0, 71.1111, -14.2222, 0, 99.5556, -14.2222, 0, 71.1111, 14.2222, 0, 71.1111, -14.2222, 0, 99.5556, -42.6667, 0, 99.5556, -14.2222, 0, 71.1111, -42.6667, 0, 99.5556, -42.6667, 0, 71.1111, -14.2222, 0, 71.1111, -42.6667, 0, 99.5556, -71.1111, 0, 99.5556, -42.6667, 0, 71.1111, -71.1111, 0, 99.5556, -71.1111, 0, 71.1111, -42.6667, 0, 71.1111, -71.1111, 0, 99.5556, -99.5556, 0, 99.5556, -71.1111, 0, 71.1111, -99.5556, 0, 99.5556, -99.5556, 0, 71.1111, -71.1111, 0, 71.1111, -99.5556, 0, 99.5556, -128, 0, 99.5556, -99.5556, 0, 71.1111, -128, 0, 99.5556, -128, 0, 71.1111, -99.5556, 0, 71.1111, 128, 0, 71.1111, 99.5556, 0, 71.1111, 128, 0, 42.6667, 99.5556, 0, 71.1111, 99.5556, 0, 42.6667, 128, 0, 42.6667, 99.5556, 0, 71.1111, 71.1111, 0, 71.1111, 99.5556, 0, 42.6667, 71.1111, 0, 71.1111, 71.1111, 0, 42.6667, 99.5556, 0, 42.6667, 71.1111, 0, 71.1111, 42.6667, 0, 71.1111, 71.1111, 0, 42.6667, 42.6667, 0, 71.1111, 42.6667, 0, 42.6667, 71.1111, 0, 42.6667, 42.6667, 0, 71.1111, 14.2222, 0, 71.1111, 42.6667, 0, 42.6667, 14.2222, 0, 71.1111, 14.2222, 0, 42.6667, 42.6667, 0, 42.6667, 14.2222, 0, 71.1111, -14.2222, 0, 71.1111, 14.2222, 0, 42.6667, -14.2222, 0, 71.1111, -14.2222, 0, 42.6667, 14.2222, 0, 42.6667, -14.2222, 0, 71.1111, -42.6667, 0, 71.1111, -14.2222, 0, 42.6667, -42.6667, 0, 71.1111, -42.6667, 0, 42.6667, -14.2222, 0, 42.6667, -42.6667, 0, 71.1111, -71.1111, 0, 71.1111, -42.6667, 0, 42.6667, -71.1111, 0, 71.1111, -71.1111, 0, 42.6667, -42.6667, 0, 42.6667, -71.1111, 0, 71.1111, -99.5556, 0, 71.1111, -71.1111, 0, 42.6667, -99.5556, 0, 71.1111, -99.5556, 0, 42.6667, -71.1111, 0, 42.6667, -99.5556, 0, 71.1111, -128, 0, 71.1111, -99.5556, 0, 42.6667, -128, 0, 71.1111, -128, 0, 42.6667, -99.5556, 0, 42.6667, 128, 0, 42.6667, 99.5556, 0, 42.6667, 128, 0, 14.2222, 99.5556, 0, 42.6667, 99.5556, 0, 14.2222, 128, 0, 14.2222, 99.5556, 0, 42.6667, 71.1111, 0, 42.6667, 99.5556, 0, 14.2222, 71.1111, 0, 42.6667, 71.1111, 0, 14.2222, 99.5556, 0, 14.2222, 71.1111, 0, 42.6667, 42.6667, 0, 42.6667, 71.1111, 0, 14.2222, 42.6667, 0, 42.6667, 42.6667, 0, 14.2222, 71.1111, 0, 14.2222, 42.6667, 0, 42.6667, 14.2222, 0, 42.6667, 42.6667, 0, 14.2222, 14.2222, 0, 42.6667, 14.2222, 0, 14.2222, 42.6667, 0, 14.2222, 14.2222, 0, 42.6667, -14.2222, 0, 42.6667, 14.2222, 0, 14.2222, -14.2222, 0, 42.6667, -14.2222, 0, 14.2222, 14.2222, 0, 14.2222, -14.2222, 0, 42.6667, -42.6667, 0, 42.6667, -14.2222, 0, 14.2222, -42.6667, 0, 42.6667, -42.6667, 0, 14.2222, -14.2222, 0, 14.2222, -42.6667, 0, 42.6667, -71.1111, 0, 42.6667, -42.6667, 0, 14.2222, -71.1111, 0, 42.6667, -71.1111, 0, 14.2222, -42.6667, 0, 14.2222, -71.1111, 0, 42.6667, -99.5556, 0, 42.6667, -71.1111, 0, 14.2222, -99.5556, 0, 42.6667, -99.5556, 0, 14.2222, -71.1111, 0, 14.2222, -99.5556, 0, 42.6667, -128, 0, 42.6667, -99.5556, 0, 14.2222, -128, 0, 42.6667, -128, 0, 14.2222, -99.5556, 0, 14.2222, 128, 0, 14.2222, 99.5556, 0, 14.2222, 128, 0, -14.2222, 99.5556, 0, 14.2222, 99.5556, 0, -14.2222, 128, 0, -14.2222, 99.5556, 0, 14.2222, 71.1111, 0, 14.2222, 99.5556, 0, -14.2222, 71.1111, 0, 14.2222, 71.1111, 0, -14.2222, 99.5556, 0, -14.2222, 71.1111, 0, 14.2222, 42.6667, 0, 14.2222, 71.1111, 0, -14.2222, 42.6667, 0, 14.2222, 42.6667, 0, -14.2222, 71.1111, 0, -14.2222, 42.6667, 0, 14.2222, 14.2222, 0, 14.2222, 42.6667, 0, -14.2222, 14.2222, 0, 14.2222, 14.2222, 0, -14.2222, 42.6667, 0, -14.2222, 14.2222, 0, 14.2222, -14.2222, 0, 14.2222, 14.2222, 0, -14.2222, -14.2222, 0, 14.2222, -14.2222, 0, -14.2222, 14.2222, 0, -14.2222, -14.2222, 0, 14.2222, -42.6667, 0, 14.2222, -14.2222, 0, -14.2222, -42.6667, 0, 14.2222, -42.6667, 0, -14.2222, -14.2222, 0, -14.2222, -42.6667, 0, 14.2222, -71.1111, 0, 14.2222, -42.6667, 0, -14.2222, -71.1111, 0, 14.2222, -71.1111, 0, -14.2222, -42.6667, 0, -14.2222, -71.1111, 0, 14.2222, -99.5556, 0, 14.2222, -71.1111, 0, -14.2222, -99.5556, 0, 14.2222, -99.5556, 0, -14.2222, -71.1111, 0, -14.2222, -99.5556, 0, 14.2222, -128, 0, 14.2222, -99.5556, 0, -14.2222, -128, 0, 14.2222, -128, 0, -14.2222, -99.5556, 0, -14.2222, 128, 0, -14.2222, 99.5556, 0, -14.2222, 128, 0, -42.6667, 99.5556, 0, -14.2222, 99.5556, 0, -42.6667, 128, 0, -42.6667, 99.5556, 0, -14.2222, 71.1111, 0, -14.2222, 99.5556, 0, -42.6667, 71.1111, 0, -14.2222, 71.1111, 0, -42.6667, 99.5556, 0, -42.6667, 71.1111, 0, -14.2222, 42.6667, 0, -14.2222, 71.1111, 0, -42.6667, 42.6667, 0, -14.2222, 42.6667, 0, -42.6667, 71.1111, 0, -42.6667, 42.6667, 0, -14.2222, 14.2222, 0, -14.2222, 42.6667, 0, -42.6667, 14.2222, 0, -14.2222, 14.2222, 0, -42.6667, 42.6667, 0, -42.6667, 14.2222, 0, -14.2222, -14.2222, 0, -14.2222, 14.2222, 0, -42.6667, -14.2222, 0, -14.2222, -14.2222, 0, -42.6667, 14.2222, 0, -42.6667, -14.2222, 0, -14.2222, -42.6667, 0, -14.2222, -14.2222, 0, -42.6667, -42.6667, 0, -14.2222, -42.6667, 0, -42.6667, -14.2222, 0, -42.6667, -42.6667, 0, -14.2222, -71.1111, 0, -14.2222, -42.6667, 0, -42.6667, -71.1111, 0, -14.2222, -71.1111, 0, -42.6667, -42.6667, 0, -42.6667, -71.1111, 0, -14.2222, -99.5556, 0, -14.2222, -71.1111, 0, -42.6667, -99.5556, 0, -14.2222, -99.5556, 0, -42.6667, -71.1111, 0, -42.6667, -99.5556, 0, -14.2222, -128, 0, -14.2222, -99.5556, 0, -42.6667, -128, 0, -14.2222, -128, 0, -42.6667, -99.5556, 0, -42.6667, 128, 0, -42.6667, 99.5556, 0, -42.6667, 128, 0, -71.1111, 99.5556, 0, -42.6667, 99.5556, 0, -71.1111, 128, 0, -71.1111, 99.5556, 0, -42.6667, 71.1111, 0, -42.6667, 99.5556, 0, -71.1111, 71.1111, 0, -42.6667, 71.1111, 0, -71.1111, 99.5556, 0, -71.1111, 71.1111, 0, -42.6667, 42.6667, 0, -42.6667, 71.1111, 0, -71.1111, 42.6667, 0, -42.6667, 42.6667, 0, -71.1111, 71.1111, 0, -71.1111, 42.6667, 0, -42.6667, 14.2222, 0, -42.6667, 42.6667, 0, -71.1111, 14.2222, 0, -42.6667, 14.2222, 0, -71.1111, 42.6667, 0, -71.1111, 14.2222, 0, -42.6667, -14.2222, 0, -42.6667, 14.2222, 0, -71.1111, -14.2222, 0, -42.6667, -14.2222, 0, -71.1111, 14.2222, 0, -71.1111, -14.2222, 0, -42.6667, -42.6667, 0, -42.6667, -14.2222, 0, -71.1111, -42.6667, 0, -42.6667, -42.6667, 0, -71.1111, -14.2222, 0, -71.1111, -42.6667, 0, -42.6667, -71.1111, 0, -42.6667, -42.6667, 0, -71.1111, -71.1111, 0, -42.6667, -71.1111, 0, -71.1111, -42.6667, 0, -71.1111, -71.1111, 0, -42.6667, -99.5556, 0, -42.6667, -71.1111, 0, -71.1111, -99.5556, 0, -42.6667, -99.5556, 0, -71.1111, -71.1111, 0, -71.1111, -99.5556, 0, -42.6667, -128, 0, -42.6667, -99.5556, 0, -71.1111, -128, 0, -42.6667, -128, 0, -71.1111, -99.5556, 0, -71.1111, 128, 0, -71.1111, 99.5556, 0, -71.1111, 128, 0, -99.5556, 99.5556, 0, -71.1111, 99.5556, 0, -99.5556, 128, 0, -99.5556, 99.5556, 0, -71.1111, 71.1111, 0, -71.1111, 99.5556, 0, -99.5556, 71.1111, 0, -71.1111, 71.1111, 0, -99.5556, 99.5556, 0, -99.5556, 71.1111, 0, -71.1111, 42.6667, 0, -71.1111, 71.1111, 0, -99.5556, 42.6667, 0, -71.1111, 42.6667, 0, -99.5556, 71.1111, 0, -99.5556, 42.6667, 0, -71.1111, 14.2222, 0, -71.1111, 42.6667, 0, -99.5556, 14.2222, 0, -71.1111, 14.2222, 0, -99.5556, 42.6667, 0, -99.5556, 14.2222, 0, -71.1111, -14.2222, 0, -71.1111, 14.2222, 0, -99.5556, -14.2222, 0, -71.1111, -14.2222, 0, -99.5556, 14.2222, 0, -99.5556, -14.2222, 0, -71.1111, -42.6667, 0, -71.1111, -14.2222, 0, -99.5556, -42.6667, 0, -71.1111, -42.6667, 0, -99.5556, -14.2222, 0, -99.5556, -42.6667, 0, -71.1111, -71.1111, 0, -71.1111, -42.6667, 0, -99.5556, -71.1111, 0, -71.1111, -71.1111, 0, -99.5556, -42.6667, 0, -99.5556, -71.1111, 0, -71.1111, -99.5556, 0, -71.1111, -71.1111, 0, -99.5556, -99.5556, 0, -71.1111, -99.5556, 0, -99.5556, -71.1111, 0, -99.5556, -99.5556, 0, -71.1111, -128, 0, -71.1111, -99.5556, 0, -99.5556, -128, 0, -71.1111, -128, 0, -99.5556, -99.5556, 0, -99.5556, 128, 0, -99.5556, 99.5556, 0, -99.5556, 128, 0, -128, 99.5556, 0, -99.5556, 99.5556, 0, -128, 128, 0, -128, 99.5556, 0, -99.5556, 71.1111, 0, -99.5556, 99.5556, 0, -128, 71.1111, 0, -99.5556, 71.1111, 0, -128, 99.5556, 0, -128, 71.1111, 0, -99.5556, 42.6667, 0, -99.5556, 71.1111, 0, -128, 42.6667, 0, -99.5556, 42.6667, 0, -128, 71.1111, 0, -128, 42.6667, 0, -99.5556, 14.2222, 0, -99.5556, 42.6667, 0, -128, 14.2222, 0, -99.5556, 14.2222, 0, -128, 42.6667, 0, -128, 14.2222, 0, -99.5556, -14.2222, 0, -99.5556, 14.2222, 0, -128, -14.2222, 0, -99.5556, -14.2222, 0, -128, 14.2222, 0, -128, -14.2222, 0, -99.5556, -42.6667, 0, -99.5556, -14.2222, 0, -128, -42.6667, 0, -99.5556, -42.6667, 0, -128, -14.2222, 0, -128, -42.6667, 0, -99.5556, -71.1111, 0, -99.5556, -42.6667, 0, -128, -71.1111, 0, -99.5556, -71.1111, 0, -128, -42.6667, 0, -128, -71.1111, 0, -99.5556, -99.5556, 0, -99.5556, -71.1111, 0, -128, -99.5556, 0, -99.5556, -99.5556, 0, -128, -71.1111, 0, -128, -99.5556, 0, -99.5556, -128, 0, -99.5556, -99.5556, 0, -128, -128, 0, -99.5556, -128, 0, -128, -99.5556, 0, -128 )

[node name="Water" type="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
material_override = SubResource( 2 )
mesh = SubResource( 3 )
material/0 = null

[node name="StaticBody" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )

[node name="CollisionShape" type="CollisionShape" parent="StaticBody"]
shape = SubResource( 7 )
